{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Timy It is intended to provide a simple cli tool for calcurse and topydo users. public TODO list Fixes FIX : Resolve available time response format (should ever be 00:00 instead 0:00) FIX : Optional day Chores Up the app db or .ical in a GitHub repo for obtain an online db REFACTOR : Create a datetime component for easy and unified library use REFACTOR : Eliminate duplicity and abstract properly the code, may use layers or not. Features Booking and Availability FEAT : Want to know available time from another day than today FEAT : System mustn\u2019t let me book time if the day has not enough available time FEAT : Update available time on the day when there are time bookings Integrations FEAT : Integration with newpr and topydo Create a timebook for an existing or new project Timing the time spent on an existing task in todo.txt FEAT : Integration with calcurse Be able to visualize timebooks in calcurse Create a calcurse event from this app (using iCal) Check for available time in a day considering calcurse events Synchronize online database with calcurse Project Management FEAT : Attach a Project to time book (using '+' topydo-like syntax) FEAT : Obtain time dedicated per each project FEAT : Timing the time spent on an existing task in todo.txt As a user, I want to start timing when I begin a task and finish when I end it, so I can see and save the timing record for the completed task.","title":"Timy"},{"location":"#timy","text":"It is intended to provide a simple cli tool for calcurse and topydo users.","title":"Timy"},{"location":"#public-todo-list","text":"","title":"public TODO list"},{"location":"#fixes","text":"FIX : Resolve available time response format (should ever be 00:00 instead 0:00) FIX : Optional day","title":"Fixes"},{"location":"#chores","text":"Up the app db or .ical in a GitHub repo for obtain an online db REFACTOR : Create a datetime component for easy and unified library use REFACTOR : Eliminate duplicity and abstract properly the code, may use layers or not.","title":"Chores"},{"location":"#features","text":"","title":"Features"},{"location":"#booking-and-availability","text":"FEAT : Want to know available time from another day than today FEAT : System mustn\u2019t let me book time if the day has not enough available time FEAT : Update available time on the day when there are time bookings","title":"Booking and Availability"},{"location":"#integrations","text":"FEAT : Integration with newpr and topydo Create a timebook for an existing or new project Timing the time spent on an existing task in todo.txt FEAT : Integration with calcurse Be able to visualize timebooks in calcurse Create a calcurse event from this app (using iCal) Check for available time in a day considering calcurse events Synchronize online database with calcurse","title":"Integrations"},{"location":"#project-management","text":"FEAT : Attach a Project to time book (using '+' topydo-like syntax) FEAT : Obtain time dedicated per each project FEAT : Timing the time spent on an existing task in todo.txt As a user, I want to start timing when I begin a task and finish when I end it, so I can see and save the timing record for the completed task.","title":"Project Management"}]}